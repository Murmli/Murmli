name: Deploy Mobile Apps

# We must ensure that we're not trying to deploy multiple builds at the same time, because the build number and
# version code must be strictly increasing.
concurrency:
  group: deploy-mobile
  cancel-in-progress: true

permissions:
  contents: read

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        default: production

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.environment.outputs.value }}
    steps:
      - id: environment
        run: echo "value=${{ inputs.environment || 'production' }}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    environment: ${{ needs.variables.outputs.environment }}
    needs: variables

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/install-node

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build
        run: npm run build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_TRANSLATION_MODEL: ${{ secrets.OPENAI_TRANSLATION_MODEL }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_HEADER_SECRET_KEY: ${{ secrets.VITE_HEADER_SECRET_KEY }}
          VITE_MIN_RECIPE_SUGGESTIONS: ${{ secrets.VITE_MIN_RECIPE_SUGGESTIONS }}
          VITE_RECIPE_FETCH_COUNT: ${{ secrets.VITE_MIN_RECIPE_SUGGESTIONS }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./frontend/dist
          retention-days: 1

  build-ios:
    runs-on: macos-latest
    environment: ${{ needs.variables.outputs.environment }}
    needs:
      - variables
      - build

    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: app
          path: ./frontend/dist

      - uses: ./.github/actions/install-node

      # from: https://docs.github.com/en/actions/how-tos/deploy/deploy-to-third-party-platforms/sign-xcode-applications
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/
          cp $PP_PATH ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Sync capacitor
        working-directory: ./frontend
        run: npx cap sync

      - name: Build iOS app
        working-directory: ./frontend/build-tools
        run: fastlane ios build
        env:
          BUILD_NUMBER: ${{ github.run_number }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: ./frontend/dist/iOS
          retention-days: 1

  deploy-ios:
    runs-on: macos-latest
    environment: ${{ needs.variables.outputs.environment }}
    needs:
      - variables
      - build-ios

    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: ios-app
          path: ./frontend/dist/iOS

      - name: Deploy to Testflight
        working-directory: ./frontend/build-tools
        run: fastlane ios beta
        env:
          APPLE_APP_STORE_CONNECT_KEY: ${{ secrets.APPLE_APP_STORE_CONNECT_KEY }}
          APPLE_APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APPLE_APP_STORE_CONNECT_TEAM_ID }}
          APPLE_APP_STORE_KEY_ID: ${{ secrets.APPLE_APP_STORE_KEY_ID }}
          APPLE_APP_STORE_KEY_ISSUER_ID: ${{ secrets.APPLE_APP_STORE_KEY_ISSUER_ID }}
          APPLE_DEVELOPER_PORTAL_TEAM_ID: ${{ secrets.APPLE_DEVELOPER_PORTAL_TEAM_ID }}
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}

  build-android:
    runs-on: ubuntu-latest
    environment: ${{ needs.variables.outputs.environment }}
    needs:
      - variables
      - build

    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: app
          path: ./frontend/dist

      - uses: ./.github/actions/install-node

      - uses: ./.github/actions/select-java-version

      - name: Create Key Store
        id: keystore
        shell: bash
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ANDROID_KEY_STORE | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/keystore.jks
          echo "path=$TMP_KEYSTORE_FILE_PATH/keystore.jks" >> "$GITHUB_OUTPUT"
        env:
          ANDROID_KEY_STORE: ${{ secrets.ANDROID_KEY_STORE }}

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Sync capacitor
        working-directory: ./frontend
        run: npx cap sync

      - name: Add chmod+x to gradlw
        working-directory: ./frontend/android
        run: chmod +x gradlew

      - name: Build Android app
        working-directory: ./frontend/build-tools
        run: fastlane android build
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          ANDROID_KEY_STORE_PATH: ${{ steps.keystore.outputs.path }}
          ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Rename app bundle
        working-directory: ./frontend/android/app/build/outputs/bundle/release
        run: mv app-release.aab Murmli.aab

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-app
          path: ./frontend/android/app/build/outputs/bundle/release
          retention-days: 1

  deploy-android:
    runs-on: ubuntu-latest
    environment: ${{ needs.variables.outputs.environment }}
    needs:
      - variables
      - build-android

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/install-node

      - uses: actions/download-artifact@v5
        with:
          name: android-app
          path: ./frontend/dist/android

      - name: Deploy to internal test track
        working-directory: ./frontend/build-tools
        run: fastlane android beta
        env:
          GOOGLE_PLAY_STORE_CREDENTIALS: ${{ secrets.GOOGLE_PLAY_STORE_CREDENTIALS }}
